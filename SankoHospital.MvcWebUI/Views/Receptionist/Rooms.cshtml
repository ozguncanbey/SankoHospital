@model SankoHospital.MvcWebUI.Models.FilterModels.RoomListViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Odalar";
}

<h2 class="mb-4 fw-bold">Odalar Genel Bakışı</h2>

<!-- Filtre Formu -->
@await Html.PartialAsync("_RoomFilterPartial", Model)

<table class="table table-hover">
    <thead>
    <tr>
        <th>ID</th>
        <th>Oda Numarası</th>
        <th>Kapasite</th>
        <th>Hasta Sayısı</th>
        <th>Doluluk</th>
        <th>Son Temizlik</th>
        <th>Durum</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var room in Model.Rooms)
    {
        <tr>
            <td>@room.Id</td>
            <td>@room.RoomNumber</td>
            <td>@room.Capacity</td>
            <td>@room.CurrentPatientCount</td>
            <td>@(room.CurrentPatientCount >= room.Capacity ? "Dolu" : "Boş")</td>
            <td>@(room.LastCleanedDate.HasValue ? room.LastCleanedDate.Value.ToString("yyyy-MM-dd HH:mm") : "-")</td>
            <td>
                <span class="badge bg-@(GetStatusBadgeColor(room.Status))">
                    @room.Status
                </span>
            </td>
        </tr>
    }
    </tbody>
</table>

@functions {

    string GetStatusBadgeColor(string status)
    {
        return status switch
        {
            "Cleaned" => "success",
            "Cleaning" => "warning",
            "In Care" => "danger",
            _ => "secondary"
        };
    }

}

@section Scripts {
    <script>
        function resetFilters() {
            var form = document.getElementById('filterForm');
            if (!form) return;
            var inputs = form.querySelectorAll('input, select');
            inputs.forEach(function(input) {
                if (input.tagName.toLowerCase() === 'input') {
                    input.value = '';
                } else if (input.tagName.toLowerCase() === 'select') {
                    input.selectedIndex = 0;
                }
            });
            form.submit();
        }
    </script>
}