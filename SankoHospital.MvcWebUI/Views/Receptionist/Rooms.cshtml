@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SankoHospital.MvcWebUI.Helpers
@model SankoHospital.MvcWebUI.Models.FilterModels.RoomListViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Odalar";
    // Uygulanan filtre olup olmadığını kontrol ediyoruz
    bool isFilterActive = Model.Id.HasValue
                          || Model.RoomNumber.HasValue
                          || Model.Capacity.HasValue
                          || Model.CurrentPatientCount.HasValue
                          || !string.IsNullOrEmpty(Model.Status);
}

<div class="card mb-4">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="card-title mb-0 fw-bold text-primary">
                <i class="fas fa-bed me-2"></i> Odalar Genel Bakışı
            </h4>
            <button type="button" id="toggleFilterForm" class="btn btn-outline-secondary btn-sm">
                <i class="fas fa-filter me-1"></i> Filtreleri Göster/Gizle
            </button>
        </div>

        <!-- Filter Form Card -->
        <div class="card bg-light border-0 mb-4" id="filterCard" style="display: @(isFilterActive ? "block" : "none");">
            <div class="card-header bg-light py-3">
                <h5 class="mb-0 text-primary">
                    <i class="fas fa-filter me-2"></i> Oda Filtreleme
                </h5>
            </div>
            <div class="card-body">
                <form id="filterForm" method="get" class="row g-3 justify-content-center">
                    <!-- Oda ID -->
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="number" name="id" class="form-control form-control-sm"
                                   value="@(Model.Id.HasValue ? Model.Id.Value.ToString() : string.Empty)"
                                   placeholder="Oda ID"/>
                            <label for="id">Oda ID</label>
                        </div>
                    </div>
                    <!-- Oda Numarası -->
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="number" name="roomNumber" class="form-control form-control-sm"
                                   value="@(Model.RoomNumber.HasValue ? Model.RoomNumber.Value.ToString() : string.Empty)"
                                   placeholder="Oda Numarası"/>
                            <label for="roomNumber">Oda Numarası</label>
                        </div>
                    </div>
                    <!-- Kapasite -->
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="number" name="capacity" class="form-control form-control-sm"
                                   value="@(Model.Capacity.HasValue ? Model.Capacity.Value.ToString() : string.Empty)"
                                   placeholder="Kapasite"/>
                            <label for="capacity">Kapasite</label>
                        </div>
                    </div>
                    <!-- Hasta Sayısı -->
                    <div class="col-md-2">
                        <div class="form-floating">
                            <input type="number" name="currentPatientCount" class="form-control form-control-sm"
                                   value="@(Model.CurrentPatientCount.HasValue ? Model.CurrentPatientCount.Value.ToString() : string.Empty)"
                                   placeholder="Hasta Sayısı"/>
                            <label for="currentPatientCount">Hasta Sayısı</label>
                        </div>
                    </div>
                    <!-- Durum -->
                    <div class="col-md-2">
                        <div class="form-floating">
                            <select name="status" class="form-select form-select-sm">
                                <option value="">Tümü</option>
                                <option value="Cleaned" @(Model.Status == "Cleaned" ? "selected" : "")>Temizlendi</option>
                                <option value="Cleaning" @(Model.Status == "Cleaning" ? "selected" : "")>Temizleniyor</option>
                                <option value="In Care" @(Model.Status == "In Care" ? "selected" : "")>Bakımda</option>
                            </select>
                            <label for="status">Durum</label>
                        </div>
                    </div>
                    <!-- Butonlar -->
                    <div class="col-12 text-center mt-3">
                        <button type="submit" class="btn btn-primary btn-sm me-2">
                            <i class="fas fa-search me-1"></i> Filtrele
                        </button>
                        <button type="button" class="btn btn-secondary btn-sm" onclick="resetFilters()">
                            <i class="fas fa-undo me-1"></i> Sıfırla
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Rooms Table -->
        <div class="table-responsive">
            <table class="table table-hover table-striped border">
                <thead class="table-primary">
                <tr>
                    <th class="text-center">ID</th>
                    <th>Oda Numarası</th>
                    <th class="text-center">Kapasite</th>
                    <th class="text-center">Hasta Sayısı</th>
                    <th class="text-center">Doluluk</th>
                    <th class="text-center">Son Temizlik</th>
                    <th class="text-center">Durum</th>
                    <th class="text-center">Aksiyonlar</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var room in Model.Rooms)
                {
                    <tr>
                        <td class="text-center">@room.Id</td>
                        <td>@room.RoomNumber</td>
                        <td class="text-center">@room.Capacity</td>
                        <td class="text-center">@room.CurrentPatientCount</td>
                        <td class="text-center">
                            @(room.CurrentPatientCount >= room.Capacity ? "Dolu" : "Boş")
                        </td>
                        <td class="text-center">
                            @(room.LastCleanedDate.HasValue ? room.LastCleanedDate.Value.ToString("yyyy-MM-dd HH:mm") : "-")
                        </td>
                        <td class="text-center">
                            <span class="badge bg-@(GetStatusBadgeColor(room.Status))">
                                @CleanerHelper.GetTurkishStatus(room.Status)
                            </span>
                        </td>
                        <td class="text-center">
                            <a asp-controller="Receptionist" asp-action="RoomOccupancy" asp-route-id="@room.Id"
                               class="btn btn-sm"
                               style="background-color: var(--sidebar-hover); color: #ecf0f1;">
                                <i class="fas fa-history me-1"></i> Geçmiş
                            </a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleFilterFormBtn = document.getElementById('toggleFilterForm');
            const filterCard = document.getElementById('filterCard');

            toggleFilterFormBtn.addEventListener('click', function () {
                if (filterCard.style.display === 'none' || filterCard.style.display === '') {
                    filterCard.style.display = 'block';
                    toggleFilterFormBtn.innerHTML = '<i class="fas fa-filter me-1"></i> Filtreleri Gizle';
                } else {
                    filterCard.style.display = 'none';
                    toggleFilterFormBtn.innerHTML = '<i class="fas fa-filter me-1"></i> Filtreleri Göster';
                }
            });
        });

        function resetFilters() {
            var form = document.getElementById('filterForm');
            if (!form) return;
            var inputs = form.querySelectorAll('input, select');
            inputs.forEach(function (input) {
                if (input.tagName.toLowerCase() === 'input') {
                    input.value = '';
                } else if (input.tagName.toLowerCase() === 'select') {
                    input.selectedIndex = 0;
                }
            });
            form.submit();
        }
    </script>
}

@functions {

    string GetStatusBadgeColor(string status)
    {
        return status switch
        {
            "Cleaned" => "success",
            "Cleaning" => "warning",
            "In Care" => "danger",
            _ => "secondary"
        };
    }
}