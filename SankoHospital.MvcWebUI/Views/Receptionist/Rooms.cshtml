@using Microsoft.AspNetCore.Mvc.TagHelpers
@using SankoHospital.MvcWebUI.Helpers
@model SankoHospital.MvcWebUI.Models.FilterModels.RoomListViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Odalar";
    bool isFilterActive = Model.Id.HasValue
                          || Model.RoomNumber.HasValue
                          || Model.Capacity.HasValue
                          || Model.CurrentPatientCount.HasValue
                          || !string.IsNullOrEmpty(Model.Status)
                          || Model.LastCleanedDate.HasValue;
    ViewData["IsFilterActive"] = isFilterActive;
}

<!-- Filter Form Card -->
@await Html.PartialAsync("_RoomFilterPartial", Model)

<div class="card mb-4">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h4 class="card-title mb-0 fw-bold text-primary">
                <i class="fas fa-bed me-2"></i> Odalar Genel Bakışı
            </h4>
        </div>

        <!-- Rooms Table -->
        <div class="table-responsive">
            <table class="table table-hover table-striped border">
                <thead class="table-primary">
                <tr>
                    <th class="text-center">ID</th>
                    <th>Oda Numarası</th>
                    <th class="text-center">Kapasite</th>
                    <th class="text-center">Hasta Sayısı</th>
                    <th class="text-center">Doluluk</th>
                    <th class="text-center">Son Temizlik</th>
                    <th class="text-center">Durum</th>
                    <th class="text-center">Aksiyonlar</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var room in Model.Rooms)
                {
                    <tr>
                        <td class="text-center">@room.Id</td>
                        <td>@room.RoomNumber</td>
                        <td class="text-center">@room.Capacity</td>
                        <td class="text-center">@room.CurrentPatientCount</td>
                        <td class="text-center">
                            @(room.CurrentPatientCount >= room.Capacity ? "Dolu" : "Boş")
                        </td>
                        <td class="text-center">
                            @(room.LastCleanedDate.HasValue ? room.LastCleanedDate.Value.ToString("yyyy-MM-dd HH:mm") : "-")
                        </td>
                        <td class="text-center">
                            <span class="badge bg-@(GetStatusBadgeColor(room.Status))">
                                @CleanerHelper.GetTurkishStatus(room.Status)
                            </span>
                        </td>
                        <td class="text-center">
                            <a asp-controller="Receptionist" asp-action="RoomOccupancy" asp-route-id="@room.Id"
                               class="btn btn-sm" style="background-color: var(--sidebar-hover); color: #ecf0f1;">
                                <i class="fas fa-history me-1"></i> Geçmiş
                            </a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        const toggleFilterFormBtn = document.getElementById('toggleFilterForm');
        const filterCard = document.getElementById('filterCard');

        toggleFilterFormBtn.addEventListener('click', function () {
            if (filterCard.style.display === 'none' || filterCard.style.display === '') {
                filterCard.style.display = 'block';
                toggleFilterFormBtn.innerHTML = '<i class="fas fa-filter me-1"></i> Filtreleri Gizle';
            } else {
                filterCard.style.display = 'none';
                toggleFilterFormBtn.innerHTML = '<i class="fas fa-filter me-1"></i> Filtreleri Göster';
            }
        });
    });

    function resetFilters() {
        const form = document.getElementById('filterForm');
        if (!form) {
            console.error("Filter form not found!");
            return;
        }
        const inputs = Array.from(form.querySelectorAll('input, select'));
        inputs.forEach(input => {
            if (input.tagName.toLowerCase() === 'input') {
                input.value = '';
            } else if (input.tagName.toLowerCase() === 'select') {
                input.selectedIndex = 0;
            }
        });
        form.submit();
    }
</script>
}

@functions {

    string GetStatusBadgeColor(string status)
    {
        return status switch
        {
            "Cleaned" => "success",
            "Cleaning" => "warning",
            "In Care" => "danger",
            _ => "secondary"
        };
    }

}